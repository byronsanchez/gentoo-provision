##
## Debugging stuff
##

logfile=/tmp/build.log
workdir=/mnt/gentoo

##
## Partition settings
##

disk.vda.1.size=128
disk.vda.1.type=83
disk.vda.1.purpose=/boot
disk.vda.1.format=mkfs.ext4
disk.vda.1.filesystem=ext4

disk.vda.2.size=
disk.vda.2.type=8e
disk.vda.2.purpose=lvm:vg
disk.vda.2.format=pvcreate

disk.lvm.creategroup=vg

disk.lvm.vg.swap.size=1024
disk.lvm.vg.swap.format=mkswap
disk.lvm.vg.swap.purpose=swap
disk.lvm.vg.swap.filesystem=swap

disk.lvm.vg.root.size=4096
disk.lvm.vg.root.format=mkfs.ext4
disk.lvm.vg.root.purpose=root
disk.lvm.vg.root.filesystem=ext4

disk.lvm.vg.home.size=1024
disk.lvm.vg.home.format=mkfs.ext4
disk.lvm.vg.home.purpose=/home
disk.lvm.vg.home.filesystem=ext4

disk.lvm.vg.opt.size=1024
disk.lvm.vg.opt.format=mkfs.ext4
disk.lvm.vg.opt.purpose=/opt
disk.lvm.vg.opt.filesystem=ext4

disk.lvm.vg.var.size=4096
disk.lvm.vg.var.format=mkfs.ext4 -i 8192
disk.lvm.vg.var.purpose=/var
disk.lvm.vg.var.filesystem=ext4

disk.lvm.vg.usr.size=8192
disk.lvm.vg.usr.format=mkfs.ext4 -i 8192
disk.lvm.vg.usr.purpose=/usr
disk.lvm.vg.usr.filesystem=ext4

##
## Profile specific stuff
##

profile=hardened/linux/amd64/no-multilib
snapshot=snapshots/portage-latest.tar.bz2
weblocation=http://mirror.mcs.anl.gov/pub/gentoo
# if status = latest, then the latest stage file will be attempted as opposed to
# the one listed under the stage config. However, the stage config will act as a
# fallback. if status = defined -> directly use the stage config url
stagestatus=latest
# used when stagestatus = defined
stage=releases/amd64/current-iso/hardened/stage3-amd64-hardened+nomultilib-20140403.tar.bz2
# used when stagestatus = latest
stagepattern=releases/amd64/current-iso/hardened/stage3-amd64-hardened+nomultilib*.tar.bz2

#
# make.conf settings
#

makeconf.USE=agent audit bcmath device-mapper dlz gd -gpm -gtk imap ipv6 -ldap libwww maildir mhash mysql maildir png -pppd sasl sockets -sqlite3 ssl truetype ubac unicode xml -xorg udev -unconfined xattr
makeconf.GENTOO_MIRRORS=http://binhost.internal.nitelite.io/gentoo http://mirror.mcs.anl.gov/pub/gentoo/ ${GENTOO_MIRRORS}
makeconf.MAKEOPTS=-j2
makeconf.PORTAGE_BINHOST=http://binhost.internal.nitelite.io/packages
makeconf.PKGDIR=/var/tmp/portage/packages
makeconf.DISTDIR=/var/tmp/portage/distfiles
makeconf.FEATURES=buildpkg
makeconf.CFLAGS=-march=x86-64 -O2 -pipe
makeconf.CXXFLAGS=-march=x86-64 -O2 -pipe
makeconf.CHOST=x86_64-pc-linux-gnu
makeconf.POLICY_TYPES=strict mcs

reposconf.DEFAULT.main-repo=gentoo
reposconf.gentoo.sync-uri=rsync://binhost.internal.nitelite.io/gentoo-portage
reposconf.gentoo.sync-type=rsync
reposconf.gentoo.location=/usr/portage

#
# Portage directory settings
#

portage.package.use.openldap=net-nds/openldap\ -sasl\ syslog\ debug
portage.package.use.selinux=app-admin/setools\ python
portage.package.use.libselinux=sys-libs/libselinux ruby static-libs
portage.package.use.libpcre=dev-libs/libpcre static-libs

#
# /etc settings
#

setup.etc.timezone=US/Eastern

#
# /etc/conf.d/* settings
#

# TODO: The hostname doesn't really matter here since it will be updated via puppet?
setup.conf.hostname.hostname=guest
setup.conf.keymaps.keymap=us
setup.conf.net.config_eth0=dhcp
setup.domainname=internal.nitelite.io
setup.rootpassword=toor
setup.localegen.numentries=2
setup.localegen.1=en_US ISO-8859-1
setup.localegen.2=en_US.UTF-8 UTF-8
setup.hosts.puppet=10.66.77.100
setup.hosts.binhost=10.66.77.100

tools.install.packages=lvm2 syslog-ng dhcpcd vim eix portage-utils layman puppet nfs-utils
tools.install.runlevel.default=syslog-ng
tools.install.runlevel.boot=lvm
tools.install.runlevel.sysinit=udev
tools.install.runlevel.sysinit=kmod-static-nodes
tools.install.package.syslog-ng.preinstall=unset path

# kernel package - the sources to build from. there are different types of
# sources, so choose one for this setting.
# provided - don't install the sources, they are being provided by us
# kernel.install - whether to install the kernel from an already compiled source
# or whether to compile the kernel
# use config if you are compiling, or else use binary if you are providing a
# compiled version

kernel.package=hardened-sources
# provided = do not install sources, but mention it in package.provided. This is
# useful for any nodes that use a local binhost since we are not building the
# kernel on this node, just downloading the already built one from the binhost.
# This makes the package setting above irrelevant. NOTE: for selinux to install,
# you will need the actual sources in the directory! May as well let them emerge
# the sources even for guests. The good news is that the binhost can serve as
# the provider.
#kernelsources.install=provided

# build will look for a configuration file in the kernel directory
# binary will look for a compiled kernel and initramfs in the kernel directory
# you must supply these yourself, the script does not pull them for you from
# anywhere. however, if set to build and no config exists, the kernel will be
# compiled using the default config.
kernel.install=binary
#kernel.config=kernel/hypervisor-guest-config
kernel.binary=kernel/guest-linux-3.13.8-hardened-r2-nitelite-x86.tar.bz2
kernel.initramfs=kernel/guest-initramfs

